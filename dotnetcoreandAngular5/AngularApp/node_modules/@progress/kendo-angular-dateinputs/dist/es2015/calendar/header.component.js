import * as tslib_1 from "tslib";
import { Component, ChangeDetectionStrategy, EventEmitter, HostBinding, Input, Output } from '@angular/core';
import { LocalizationService } from '@progress/kendo-angular-l10n';
import { getDate } from '@progress/kendo-date-math';
import { CalendarViewEnum } from './models/view.enum';
import { BusViewService } from './services/bus-view.service';
import { MIN_DATE, MAX_DATE } from '../defaults';
import { dateInRange, getToday, isInRange } from '../util';
/**
 * @hidden
 */
let HeaderComponent = class HeaderComponent {
    constructor(bus, localization) {
        this.bus = bus;
        this.localization = localization;
        this.navigate = true;
        this.todayIsInRange = true;
        this.min = new Date(MIN_DATE);
        this.max = new Date(MAX_DATE);
        this.today = new EventEmitter();
    }
    get getComponentClass() {
        return true;
    }
    ngOnChanges(_) {
        const service = this.bus.service(this.activeView);
        if (!service) {
            return;
        }
        this.todayIsInRange = isInRange(getToday(), getDate(this.min), getDate(this.max));
        this.todayMessage = this.localization.get('today');
        this.navigate = this.bus.canMoveUp(this.activeView);
        this.title = this.currentDate ? service.title(this.currentDate) : '';
    }
    handleTodayClick() {
        if (!this.todayIsInRange) {
            return;
        }
        this.bus.moveToBottom(this.activeView);
        this.today.emit(dateInRange(getToday(), this.min, this.max));
    }
    handleNavigation() {
        if (!this.navigate) {
            return;
        }
        this.bus.moveUp(this.activeView);
    }
};
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Number)
], HeaderComponent.prototype, "activeView", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Date)
], HeaderComponent.prototype, "currentDate", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Date)
], HeaderComponent.prototype, "min", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Date)
], HeaderComponent.prototype, "max", void 0);
tslib_1.__decorate([
    Output(),
    tslib_1.__metadata("design:type", EventEmitter)
], HeaderComponent.prototype, "today", void 0);
tslib_1.__decorate([
    HostBinding("class.k-calendar-header"),
    tslib_1.__metadata("design:type", Boolean),
    tslib_1.__metadata("design:paramtypes", [])
], HeaderComponent.prototype, "getComponentClass", null);
HeaderComponent = tslib_1.__decorate([
    Component({
        changeDetection: ChangeDetectionStrategy.OnPush,
        selector: 'kendo-calendar-header',
        template: `
    <span class="k-button k-bare k-title" [class.k-state-disabled]="!navigate" (click)="handleNavigation()">
        {{title}}
    </span>
    <span class="k-today" [class.k-state-disabled]="!todayIsInRange" (click)="handleTodayClick()">
        {{todayMessage}}
    </span>
  `
    }),
    tslib_1.__metadata("design:paramtypes", [BusViewService,
        LocalizationService])
], HeaderComponent);
export { HeaderComponent };
