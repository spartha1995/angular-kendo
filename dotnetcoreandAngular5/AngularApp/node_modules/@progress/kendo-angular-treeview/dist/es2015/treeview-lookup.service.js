import { Injectable } from '@angular/core';
import { nodeIndex } from './utils';
/**
 * @hidden
 */
export class TreeViewLookupService {
    constructor() {
        this.map = new Map();
    }
    registerItem(item, parent) {
        const currentLookup = {
            children: [],
            item,
            parent: this.item(nodeIndex(parent))
        };
        this.map.set(item.index, currentLookup);
    }
    registerChildren(index, children) {
        const item = this.item(index);
        if (!item) {
            return;
        }
        item.children = children;
    }
    unregisterItem(item) {
        this.map.delete(item);
    }
    replaceItem(index, item, parent) {
        const old = this.item(index);
        if (!old || !item) {
            return;
        }
        this.unregisterItem(index);
        this.registerItem(item, parent);
        if (index === item.index) {
            this.registerChildren(item.index, old.children.slice());
        }
    }
    itemLookup(index) {
        const item = this.item(index);
        if (!item) {
            return null;
        }
        return {
            children: this.mapChildren(item.children),
            item: item.item,
            parent: item.parent
        };
    }
    hasItem(index) {
        return this.map.has(index);
    }
    item(index) {
        return this.map.get(index) || null;
    }
    mapChildren(children) {
        return children.map(c => {
            const { item, parent, children } = this.item(c.index);
            return {
                children: this.mapChildren(children),
                item,
                parent
            };
        });
    }
}
TreeViewLookupService.decorators = [
    { type: Injectable },
];
/** @nocollapse */
TreeViewLookupService.ctorParameters = () => [];
